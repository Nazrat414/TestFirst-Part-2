// function asyncEach(arr, asyncFunc, cb) {
//   arr.forEach(function(elem) {
//     asyncFunc(elem, function(err, asyncResult) {
//       if(err) cb(err);
//       else cb(null, asyncResult);
//     })
//   })
// }

//this is in videos

// describe('asyncEach', function() {

//   var arr = [100, 200, 300, 50, 10, 150]; //give array of lat and long objects, get back countries?
//   var total, count;

//   //We may want to change this to objects
//   var asyncFunc = function(elem, callback) { 
//     if(elem < 0) {
//       var err = {message: 'Number must be greater than 0'};
//       callback(err, null);
//     } else {
//       setTimeout(function() {
//         callback(null, elem); //doubles the elements value
//       }, elem); //setTimeout runs based on the element
//     }
//   };

//   beforeEach(function(done) {
//     total = 0;
//     count = 0;

//     asyncEach(arr, asyncFunc, function(err, result) {
//       total += result;
//       if(count++ === arr.length-1) done();
//     });
//   })

//   it('Runs the callback for the result of each async call for each element in the array', function() {
//     expect(total).toEqual(810);
//   })

//   it('throws an error if the async function generates an error', function(done) {
//     var arrShouldGenerateErr = [100, -40, 300, -50, 10, 150];
//     var runCount = 0, errCount = 0;
//     asyncEach(arrShouldGenerateErr, asyncFunc, function(err, result) {
//       if(err) errCount++;
//       if(runCount++ === arrShouldGenerateErr.length-1) {
//         expect(errCount).toEqual(2);
//         done();
//       }
//     })
//   });
    
// })


describe('asyncMap', function() {
  var myValue;

  var asyncFunc = function(elem, callback) { 
    if(elem < 0) {
      var err = {message: 'Number must be greater than 0'};
      callback(err, null);
    } else {
      setTimeout(function() {
        callback(null, elem*2); //doubles the elements value
      }, elem); //setTimeout runs based on the element
    }
  };

  var arr = ['Umbrella', 'Teardrops on my guitar', 'Thriller', 'Defying Gravity', 'Jolene', 'Drive By', 'La Camisa Negra'];

  beforeEach(function(done) {
    asyncMap(arr, asyncFunc, function(err, result) {
      myValue = result;
      done();
    })
  })

  it('creates an array of the mapped values generated by the async function, and passes that array into the given callback', function() {
    expect(myValue.length).toEqual(6);
  })

  it('the array is in the order that each async call finishes, and each element has doubled', function() {
    expect(myValue).toEqual([20, 100, 200, 300, 400, 600]);
  })

  it('throws an error if the async function generates an error', function(done) {
    var arrShouldGenerateErr = [100, -40, 300, 50, 10, 150];
    asyncMap(arrShouldGenerateErr, asyncFunc, function(err, result) {
      expect(err.message).toEqual('Number must be greater than 0');
      done();
    })
  });
  
})